#!/usr/bin/env groovy
pipeline {
    agent any
    stages {
        stage('cleanup'){
            steps{
                deleteDir()
                dir("${workspace}@tmp"){
                    deleteDir()
                }
            }
        }
        stage('debug'){
            steps{
                sh 'printenv'
            }
        }
        stage('SCM: checkout'){
            steps{
                checkout scm
                git url: 'https://github.com/andreaswendlandt/gotham.git'
                sh "git pull origin master"
            }
        }
        stage('install cronguard wrapper') {
            steps {
                sh "dpkg -i cronguard/packages/cronguard-wrapper_1.0-1.deb"
            }
        }
        stage('install cronguard daemon') {
            steps {
                sh "dpkg -i cronguard/packages/cronguard-daemon_1.0-1.deb"
            }
        }
        stage('install cronguard server') {
            steps {
                sh "dpkg -i cronguard/packages/cronguard-server_1.0-1.deb"
            }
        }
        stage('run a job') {
            steps {
                sh "/opt/cronguard/cron_wrapper.sh 'sleep 2 | true'"
            }
        }
        stage('run another job') {
            steps {
                sh "/opt/cronguard/cron_wrapper.sh 'sleep 2 | false'"
            }
        }
        stage('start cron daemon') {
            steps {
                sh "/opt/cronguard/cronguard.sh start"
            }
        }
        stage('check for successful handled jobs') {
            steps {
                sh "grep 'will be removed' /var/log/cronguard.log"
            }
        }
        stage('check for non successful handled jobs') {
            steps {
                sh "grep 'will be sent' /var/log/cronguard.log"
            }
        }
    }
}
